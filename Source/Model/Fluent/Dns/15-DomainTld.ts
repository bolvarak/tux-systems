///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
'use strict'; /// Strict Syntax //////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Sequelize Dependencies ///////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

import {
	BeforeCreate,
	BeforeUpdate,
	Column,
	DataType,
	Model,
	Table
} from 'sequelize-typescript';

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// DNS Domain TLD Table Model Definition ////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

@Table({
	indexes: [
		{fields: ['name'], unique: true}
	],
	paranoid: false,
	tableName: 'dns_domain_tld',
	timestamps: false,
	version: false
})
export default class DnsDomainTld extends Model<DnsDomainTld> {

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// Hooks ////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	@BeforeCreate
	@BeforeUpdate
	public static normalizeTopLevelDomain($instance: DnsDomainTld): void {
		// Reset the TLD
		$instance.name = $instance.name.toLowerCase().trim();
	}

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// Columns //////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	@Column({
		allowNull: false,
		defaultValue: DataType.UUIDV4,
		field: 'id',
		primaryKey: true,
		type: DataType.UUID
	})
	public id!: string;

	@Column({
		allowNull: false,
		field: 'name',
		type: DataType.STRING(255)
	})
	public name!: string;

}
