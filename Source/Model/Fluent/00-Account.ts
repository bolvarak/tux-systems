///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
'use strict'; /// Strict Syntax //////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Sequelize Dependencies ///////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

import {
	Column,
	DataType,
	ForeignKey,
	HasMany,
	HasOne,
	Length,
	Model,
	Table
} from 'sequelize-typescript';

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
import User from './05-User'; /// User Model /////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Account Table Model Definition ///////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

@Table({
	indexes: [
		{fields: ['is_active']},
		{fields: ['name']},
		{fields: ['parent_account_id']}
	],
	tableName: 'account'
})
export default class Account extends Model<Account> {

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// Columns //////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	@Column({
		allowNull: false,
		defaultValue: DataType.UUIDV4,
		field: 'id',
		primaryKey: true,
		type: DataType.UUID
	})
	public id!: string;

	@Column({
		allowNull: false,
		defaultValue: true,
		field: 'is_active',
		type: DataType.BOOLEAN
	})
	public isActive!: boolean;

	@Length({ max: 150 })
	@Column({
		allowNull: false,
		field: 'name',
		type: DataType.STRING
	})
	public name!: string;

	@Column({
		allowNull: true,
		field: 'parent_account_id',
		type: DataType.UUID
	})
	@ForeignKey(() => Account)
	public parentAccountId!: string;

	@HasOne(() => Account)
	public parentAccount!: Account;

	@HasMany(() => Account, 'parentAccountId')
	public subAccountList!: Account[];

	@HasMany(() => User)
	public userList!: User[];
}
