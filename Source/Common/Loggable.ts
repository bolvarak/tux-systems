///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
'use strict'; /// Strict Syntax //////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
import * as log4js from 'log4js'; /// Logging Module /////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
export default abstract class CommonLoggable { /// CommonLoggable Class Definition ///////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// Properties ///////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	/**
	 * This property contains our logger
	 * @name CommonLoggable.mLogger
	 * @property
	 * @protected
	 * @type {log4js.Logger}
	 */
	protected mLogger: log4js.Logger;

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// Constructor //////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	/**
	 * This method instantiates a new abstract loggable class
	 * @name CommonLoggable.constructor()
	 * @param {string} $sysLogId
	 * @param {string, optional} $logLevel ['debug']
	 * @protected
	 */
	protected constructor($sysLogId: string, $logLevel: string = 'debug') {

		///////////////////////////////////////////////////////////////////////////////////////////////////////////////
		/// Logger Configuration /////////////////////////////////////////////////////////////////////////////////////
		/////////////////////////////////////////////////////////////////////////////////////////////////////////////

		// Define our configuration object
		const $loggerConfig: log4js.Configuration = {
			appenders: {},
			categories: {
				default: {
					appenders: [$sysLogId],
					level: $logLevel
				}
			}
		};
		// Set our appender into the configuration object
		$loggerConfig.appenders[$sysLogId] = {
			layout: {
				type: 'colored'
			},
			type: 'stdout'
		};
		// Configure the logger
		log4js.configure($loggerConfig);
		// Set the logger into the instance
		this.mLogger = log4js.getLogger();

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	} /// End Constructor ////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// Inline Methods ///////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	/**
	 * This method returns our logger from the instance
	 * @name CommonLoggable.logger()
	 * @public
	 * @returns {log4js.Logger}
	 */
	public logger(): log4js.Logger {
		// Return the logger from the instance
		return this.mLogger;
	}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
} /// End CommonService Class Definition /////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
